<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Utilisateurs extends \App\Entity\Utilisateurs implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'email', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'pwd', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'acces', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'pseudo', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'nom', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'prenom', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'avatar', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'datetimeInscription', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'datetimeAdhesion', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'adresse', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'cp', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'ville', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'telephone', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'date_naiss'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'email', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'pwd', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'acces', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'pseudo', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'nom', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'prenom', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'avatar', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'datetimeInscription', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'datetimeAdhesion', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'adresse', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'cp', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'ville', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'telephone', '' . "\0" . 'App\\Entity\\Utilisateurs' . "\0" . 'date_naiss'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Utilisateurs $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(string $email): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getPwd(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPwd', []);

        return parent::getPwd();
    }

    /**
     * {@inheritDoc}
     */
    public function setPwd(string $pwd): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPwd', [$pwd]);

        return parent::setPwd($pwd);
    }

    /**
     * {@inheritDoc}
     */
    public function getAcces(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcces', []);

        return parent::getAcces();
    }

    /**
     * {@inheritDoc}
     */
    public function setAcces(string $acces): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcces', [$acces]);

        return parent::setAcces($acces);
    }

    /**
     * {@inheritDoc}
     */
    public function getPseudo(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPseudo', []);

        return parent::getPseudo();
    }

    /**
     * {@inheritDoc}
     */
    public function setPseudo(?string $pseudo): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPseudo', [$pseudo]);

        return parent::setPseudo($pseudo);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom(?string $nom): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenom', []);

        return parent::getPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenom(?string $prenom): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenom', [$prenom]);

        return parent::setPrenom($prenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvatar(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvatar', []);

        return parent::getAvatar();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvatar(?string $avatar): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvatar', [$avatar]);

        return parent::setAvatar($avatar);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatetimeInscription(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatetimeInscription', []);

        return parent::getDatetimeInscription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatetimeInscription(\DateTimeInterface $datetimeInscription): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatetimeInscription', [$datetimeInscription]);

        return parent::setDatetimeInscription($datetimeInscription);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatetimeAdhesion(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatetimeAdhesion', []);

        return parent::getDatetimeAdhesion();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatetimeAdhesion(?\DateTimeInterface $datetimeAdhesion): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatetimeAdhesion', [$datetimeAdhesion]);

        return parent::setDatetimeAdhesion($datetimeAdhesion);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresse(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresse', []);

        return parent::getAdresse();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdresse(string $adresse): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresse', [$adresse]);

        return parent::setAdresse($adresse);
    }

    /**
     * {@inheritDoc}
     */
    public function getCp(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCp', []);

        return parent::getCp();
    }

    /**
     * {@inheritDoc}
     */
    public function setCp(string $cp): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCp', [$cp]);

        return parent::setCp($cp);
    }

    /**
     * {@inheritDoc}
     */
    public function getVille(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVille', []);

        return parent::getVille();
    }

    /**
     * {@inheritDoc}
     */
    public function setVille(string $ville): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVille', [$ville]);

        return parent::setVille($ville);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelephone(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelephone', []);

        return parent::getTelephone();
    }

    /**
     * {@inheritDoc}
     */
    public function setTelephone(?string $telephone): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelephone', [$telephone]);

        return parent::setTelephone($telephone);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateNaiss(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateNaiss', []);

        return parent::getDateNaiss();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateNaiss(\DateTimeInterface $date_naiss): \App\Entity\Utilisateurs
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateNaiss', [$date_naiss]);

        return parent::setDateNaiss($date_naiss);
    }

}
